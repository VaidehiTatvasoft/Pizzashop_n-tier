@model Entity.ViewModel.ModifierTabViewModel;
<style>
    #multiDeleteModifiersBtn {
        width: 40px;
        height: 43px;
        margin: 5px;
        background-color: white;
        border: 1px solid #bbbbbb;
        border-radius: 5px;
    }
</style>
<section>
    <div class="row mx-0" style="border-radius: 5px;"> 
        <aside class="col-md-3 col-xl-2 left-section" style="background-image: linear-gradient(to right, white, #f2f2f2);">
            <!-- Modifier header -->
            <div class="d-flex flex-wrap justify-content-between align-items-center pt-3 pb-4" style="color: #0066A7;">
                <h5>Modifier Group</h5>
               <i class="cat-i fa-regular fa-square-plus" id="AddModifierGroup"data-bs-toggle="modal"
                    data-bs-target="#addModifierGroupModal" style="height: 30px; width:30px;"></i>
            </div>
            <!-- ModifierGroup list -->
            <partial name="_ModifierGroup" model="Model.modifierGroup" />
            </partial>
        </aside>
        <div class="col-md-9 col-xl-10 border-custom  bg-white">
            <div class="d-flex justify-content-between align-items-center pt-3 pb-3">
                <!-- Modifier header -->
                <div>
                    <h5 class="p-2 mb-0" style="color:#0066A7">Modifiers</h5>
                </div>
                <div class="d-flex upper-div justify-content-end align-items-center mb-3">
                    <div class="d-flex justify-content-center align-items-center ">
                        <div class="search-box" style="margin-right: 13px;">
                            <input type="text" placeholder="Search" name="search" id="searchModifier" />
                            <i class="fa-solid fa-magnifying-glass search-btn part-2"></i>
                        </div>
                    </div>
                    <button id="multiDeleteModifiersBtn">
                        <i class="bi bi-trash m-1 massdelete" style="cursor: pointer; color: #adadad;"></i>
                    </button>
                    <button class="btn btn-primary" id="addNewModifier"
                        style="border-radius: 5px;  margin:5px; height:43px;">
                        <span class="part-1"><i class="fa-solid fa-plus "></i></span>
                        <span class="part-2"> New Modifier </span> 
                    </button>
                </div>
            </div>
            <!-- Modifier Table -->
            <div id="modifierList">
                <partial name="_Modifier" model="Model" />
            </div>
        </div>
    </div>
</section>

<!-- Add Modifier group Modal -->
<div class="modal fade" id="addModifierGroupModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header pb-0 border-0">
                <h5 class="modal-title " id="exampleModalLabel" style="color:grey;">
                    Add Modifier Group
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body text-center " style="color:grey;">
                <form action="" class="p-2">
                    <div class="form-floating mb-3 p-0">
                        <input type="text" class="form-control" id="modifierName" placeholder="Category" />
                        <label for="modifierName">Name*</label>
                    </div>

                    <div class="form-floating p-0">
                        <textarea class="form-control" placeholder="Description" id="modifierDesc"></textarea>
                        <label for="modifierDesc">Description</label>
                    </div>
                </form>
            </div>
            <div class="text-left mx-2">
                <button class="btn btn-light border-0 text-primary bg-light" id="OpenExistingModifierModal"
                    type="button">
                    <i class="fa-solid fa-plus me-2"></i>Add Existing Modifier
                </button>
            </div>
            <div id="selectedModifiersDisplay">

            </div>
            <div class="modal-footer d-flex justify-content-end border-0">
                <button type="button" class="btn update-button" style=" width: 80px;">Save</button>
                <button type="button" class="btn cancel-button" data-bs-dismiss="modal" style=" width: 80px;">Cancel</button>
            </div>
        </div>
    </div>
</div>
<!-- Edit Modifier group -->
<div class="modal fade" id="editModifierGroupModal" tabindex="-1" aria-labelledby="exampleModalLabel"
    aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header border-0" style="color:grey;">
                <h1 class="modal-title fs-5" id="exampleModalLabel">
                    Edit Modifier Group
                </h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body text-center p-1" style="color:grey;">
                <form action="" class="p-3">
                    <div class="form-floating mb-3 p-0">
                        <input type="text" class="form-control" id="modifierName" placeholder="Category" />
                        <label for="modifierName">Name</label>
                    </div>

                    <div class="form-floating p-0">
                        <textarea class="form-control" placeholder="Description" id="modifierDesc"></textarea>
                        <label for="modifierDesc">Description</label>
                    </div>
                </form>
            </div>
            <div>
                <button class="btn btn-light border-0 text-primary bg-light" type="button">
                    <i class="fa-solid fa-plus me-2"></i>Add Existing
                    Modifier
                </button>
            </div>
            <div class="modal-footer d-flex justify-content-end border-0">
                <button type="button" class="btn update-button" style=" width: 80px;">
                    Save
                </button>
                <button type="button" class="btn cancel-button" data-bs-dismiss="modal" style=" width: 80px;">
                    Cancel
                </button>
            </div>
        </div>
    </div>
</div>
<!-- Add ExistingModifiers Modal-->
<div class="modal fade modal-md" id="selectExistingModifierModal" tabindex="-1"
    aria-labelledby="selectExistingModifierLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header border-0" style="color:grey;">
                <h5 class="modal-title" id="selectExistingModifierLabel">Select Existing Modifier</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" style="color:grey;">
                @* <div class="search-box">
                    <input type="text" id="searchExistingModifier" class="form-control" placeholder="Search...">
                </div> *@
                <div class="search-box" style="margin-right: 13px;">
                            <input type="text" placeholder="Search" name="search" id="searchExistingModifier"style="margin-right: 13px;height: 43px;width: 200px; border: 1px solid #adadad;border-radius: 5px;margin: 5px;padding: 3px;" />
                            <i class="fa-solid fa-magnifying-glass search-btn part-2"></i>
                        </div>
                <br>
                <div id="existingModifiersList" style=" overflow-y: scroll; height: 400px;">
                    <!-- Table and pagination will be loaded here via AJAX -->
                </div>

            </div>
            <div class="modal-footer border-0">
                <button id="saveModifiersButton" class="btn update-button" style=" width: 80px;">Add</button>
                <button id="cancelBtn" class="btn cancel-button" data-bs-dismiss="modal" style=" width: 80px;">Cancel</button>
            </div>
        </div>
    </div>
</div>
</section>
</div>

<script>
    var pageIndex = @Model.PageIndex;

    function GetFilteredModifiers() {
        var SearchString = $("#searchModifier").val();
        var pageSize = $("#pageSizeModifiers").val();
        if (ajaxRequest && ajaxRequest.readyState !== 4) {
            ajaxRequest.abort();
        }
        ajaxRequest = $.ajax({
            url: "/Menu/GetModifiersByModifierGroup",
            type: "GET",
            data: {
                modifierGroupId: modifierGroupId,
                pageIndex: pageIndex,
                pageSize: pageSize,
                searchString: SearchString
            },
            success: function (data) {
                $("#modifierList").html(data);
            }
        })
    }

    $("#addNewModifier").click(function () {
        $.get('@Url.Action("AddModifier", "Menu")', function (data) {
            console.log("Modifier add");
            $("#AddModifierPartial").html(data);
            $("#addModifierModal").modal('show');
        })
    })

    $('.modifierGroup').click(function () {
        modifierGroupId = $(this).data("id");
        console.log("ModifierGroupId :", modifierGroupId);
        $.ajax({
            url: '/Menu/GetModifiersByModifierGroup',
            type: 'GET',
            data: { modifierGroupId: modifierGroupId, pageSize: @Model.PageSize, pageIndex: @Model.PageIndex, searchString: "" },
            success: function (response) {
                $('#modifierList').html(response);
            }
        })
    })

    $('#multiDeleteModifiersBtn').click(function () {
        if (deleteModifierIds.length == 0) {
            toastr.warning("Select at Least One Item");
        } else {
            $('#deleteMultipleModifierModal').modal('show');
        }
    })

    @* AddExistingModifiers *@
        $('#AddModifierGroup').click(function () {
            $('#addModifierGroupModal').modal('show');
            console.log('show');
        });
    var pageIndex = @Model.PageIndex;
    $('#OpenExistingModifierModal').click(function () {
        var SearchString = $("#searchExistingModifier").val();
        var pageSize = $("#pageSizeExistingModifiers").val();
        $('#selectExistingModifierModal').modal('show');
        $.ajax({
            url: '/Menu/GetAllModifiers',
            type: 'GET',
            data: { pageSize: @Model.PageSize, pageIndex: @Model.PageIndex, searchString: "" },
            success: function (response) {
                $('#existingModifiersList').html(response);
            }
        })
        console.log('show');
    });

    @* var pageIndex = @Model.PageIndex; *@

        function GetFilteredExistingModifiers() {
            var SearchString = $("#searchExistingModifier").val();
            var pageSize = $("#pageSizeExistingModifiers").val();
            if (ajaxRequest && ajaxRequest.readyState !== 4) {
                ajaxRequest.abort();
            }
            ajaxRequest = $.ajax({
                url: "/Menu/GetAllModifiers",
                type: "GET",
                data: {
                    pageSize: @Model.PageSize, pageIndex: @Model.PageIndex, searchString: SearchString
                },
                success: function (data) {
                    $("#existingModifiersList").html(data);
                }
            })
        }

    $('#searchExistingModifier').keyup(function () {
        var value = $(this).val();
        console.log('SearchString', value)
        clearTimeout(debounce);
        pageIndex = 1
        pageSize = @Model.PageSize;
        debounce = setTimeout(() => {
            GetFilteredExistingModifiers();
        }, 600)
    });

    $("#saveModifiersButton").click(function () {
        // Clear the selectedModifiers array
        selectedModifiers = [];

        // Get all selected checkboxes
        $(".modifier-checkbox:checked").each(function () {
            const modifierId = $(this).val();
            const modifierName = $(this).data("name");

            // Add to selectedModifiers array
            selectedModifiers.push({ id: modifierId, name: modifierName });
        });
        console.log(selectedModifiers)
        // Update the UI in Modal 1
        updateSelectedModifiersUI();
        $("#selectExistingModifierModal").modal("hide");
    });

    function updateSelectedModifiersUI() {
        console.log("updateSelected")
        const selectedModifiersDisplay = $("#selectedModifiersDisplay");
        @* const selectedModifiersContainer = $("#selectedModifiersContainer"); *@

            // Clear the existing UI
            selectedModifiersDisplay.empty();
        @* selectedModifiersContainer.empty(); *@

            // Append each selected modifier
            selectedModifiers.forEach(mod => {
                console.log(mod)
                // Display in the list with a cancel icon
                selectedModifiersDisplay.append(`
         <span class="badge bg-light border text-muted small d-inline-flex align-items-center me-2 p-2">
            ${mod.name}
            <button type="button" class="btn btn-sm p-0 ms-2 text-secondary remove-modifier" data-id="${mod.id}" style="border: none; background: none;">
                <i class="fa fa-close"></i>
            </button>
        </span>
        `);

                // Add hidden input for form submission
                @* selectedModifiersContainer.append(`
            <input type="hidden" name="SelectedModifierIds" value="${mod.id}">
        `); *@
        });
    }

    $(document).on("click", ".remove-modifier", function () {
        const modifierId = $(this).data("id");

        // Remove from the selectedModifiers array
        selectedModifiers = selectedModifiers.filter(mod => mod.id != modifierId);

        // Update the UI
        updateSelectedModifiersUI();
    });

    @* Load Checkboxes *@
        function initializeCheckboxes() {
            $('.modifier-checkbox').each(function () {
                const id = $(this).data('id');
                if (selectedModifiers[id]) {
                    $(this).prop('checked', true);
                }
            });
        }
</script>
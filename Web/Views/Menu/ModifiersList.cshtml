@using Entity.Data
@model List<ModifierGroup>

<div class="container-fluid p-2">
    <div class="modifier">
        <h2 style="color: #0066A7;">Modifiers</h2>
        <div>
            <div class="mb-4 justify-content-center align-items-center flex-wrap">
                @Html.Partial("_MenuTabs")
            </div>
            <section>
                <div class="row mx-0">
                    <aside class="col-md-2" style="background-image: linear-gradient(to right, white, #f2f2f2);">
                        <!-- Section header -->
                        <div class="d-flex flex-wrap justify-content-between align-items-center"
                            style="color: #0066A7;">
                            <h5>Modifier Group</h5>
                            <i class="cat-i fa-regular fa-square-plus" style="height: 30px; width:30px;"
                                data-bs-toggle="modal" data-bs-target="#addModifierModal"></i>
                            <div class="modal fade" id="addModifierModal" tabindex="-1"
                                aria-labelledby="addModifierModalLabel" aria-hidden="true">
                                <div class="modal-dialog modal-dialog-centered" role="document">
                                    <div class="modal-content">
                                        <!-- Content will be loaded here via AJAX -->
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="overflow-auto" style="max-height: 500px;">
                            @foreach (var modifier in Model)
                            {
                                <div class="category-wrapper">
                                    <a class="nav-link menu-sidebar category-link" href="javascript:void(0);"
                                        data-category-id="@modifier.Id">
                                        <span class="category-item">
                                            <i class="fa-solid fa-grip-vertical"></i> @modifier.Name
                                            <i class="bi bi-pen m-1 edit-icon" data-id="@modifier.Id"></i>
                                            <i class="bi bi-trash m-1 delete-icon"
                                                onclick="confirmDelete(@modifier.Id)"></i>
                                        </span>
                                    </a>
                                    <form id="deleteform-@modifier.Id" method="post"
                                        action="@Url.Action("DeleteModifier", "Modifier", new { id = @modifier.Id })"
                                        style="display: none;">
                                        @Html.AntiForgeryToken()
                                    </form>
                                </div>
                            }
                        </div>
                        <div class="modal fade" id="editModifierModal" tabindex="-1"
                            aria-labelledby="editModifierModalLabel" aria-hidden="true">
                            <div class="modal-dialog modal-dialog-centered" role="document">
                                <div class="modal-content">
                                    <!-- Content will be loaded here via AJAX -->
                                </div>
                            </div>
                        </div>
                        <div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel"
                            aria-hidden="true">
                            <div class="modal-dialog modal-dialog-centered">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h5 class="modal-title" id="deleteModalLabel">Delete Confirmation</h5>
                                        <button type="button" class="btn-close" data-bs-dismiss="modal"
                                            aria-label="Close"></button>
                                    </div>
                                    <div
                                        class="modal-body d-flex flex-column justify-content-center align-items-center">
                                        <img src="@Url.Content("~/assets/warning.png")" alt=""
                                            style="height: 40px; width: auto;">
                                        Are you sure you want to delete this Modifier?
                                    </div>
                                    <div class="d-flex justify-content-center align-items-center"
                                        style="gap: 10px; margin-bottom: 20px;">
                                        <button type="button" class="btn" id="confirmDeleteButton"
                                            style="height: 40px; width: 100px; background-color: #006098; color: white;">Yes</button>
                                        <button type="button" class="btn" data-bs-dismiss="modal"
                                            style="height: 40px; width: 100px; background-color: white; border: 1px solid #006098;">No</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </aside>
                    <div class="col-md-9 border-start border-primary bg-white">
                        <div>
                            <!-- table header -->
                            <h5 class="p-3" style="color: #0066A7;">Modifiers</h5>

                            <!-- Items Table -->
                            <div id="item-list">
                                @await Html.PartialAsync("~/Views/Menu/_ModifierItemsPartial.cshtml",
                                ViewBag.ModifierItems as List<Modifier>)
                            </div>
                        </div>
                    </div>
                </div>
            </section>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function confirmDelete(modifierId) {
            const modal = new bootstrap.Modal(document.getElementById('deleteModal'));
            document.getElementById("confirmDeleteButton").onclick = function () {
                document.getElementById(`deleteform-${modifierId}`).submit();
            };
            modal.show();
        }

        $(document).ready(function () {
            var successMessage = '@TempData["SuccessMessage"]';
            var errorMessage = '@TempData["ErrorMessage"]';

            if (successMessage) {
                toastr.success(successMessage);
            }
            if (errorMessage) {
                toastr.error(errorMessage);
            }

            $('.add-category').click(function () {
                $.ajax({
                    type: "GET",
                    url: "/Modifier/AddModifier",
                    dataType: "html",
                    headers: {
                        'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function (data) {
                        $("#addModifierModal").find('.modal-content').html(data);
                        $('#addModifierModal').modal('show');
                    },
                    error: function (xhr, status, error) {
                        if (xhr.status === 401) {
                            toastr.error("You are not authorized to perform this action.");
                        } else if (xhr.status === 403) {
                            toastr.error("You are forbidden from accessing this resource.");
                        } else {
                            console.error("Error loading modifier form:", status, error);
                            alert("Failed to load modifier form.");
                        }
                    }
                });
            });

            $(document).on('click', '.category-link', function (e) {
                e.preventDefault();
                var categoryId = $(this).data('category-id');
                $('.category-link').removeClass('active');
                $(this).addClass('active');
                $.ajax({
                    url: '@Url.Action("ModifiersList", "Modifier")',
                    type: 'GET',
                    data: { modifierId: categoryId },
                    success: function (result) {
                        $('#item-list').html($(result).find('#item-list').html());
                    },
                    error: function (xhr, status, error) {
                        if (xhr.status === 401) {
                            toastr.error("You are not authorized to perform this action.");
                        } else if (xhr.status === 403) {
                            toastr.error("You are forbidden from accessing this resource.");
                        } else {
                            console.error("Error loading modifier items:", status, error);
                            alert("Failed to load modifier items.");
                        }
                    }
                });
            });

            $(document).on('click', '.edit-icon', function () {
                var id = $(this).data('id');
                $.ajax({
                    type: "GET",
                    url: "/Modifier/EditModifier/" + id,
                    dataType: "html",
                    headers: {
                        'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function (data) {
                        $("#editModifierModal").find('.modal-content').html(data);
                        $('#editModifierModal').modal('show');
                    },
                    error: function (xhr, status, error) {
                        if (xhr.status === 401) {
                            toastr.error("You are not authorized to perform this action.");
                        } else if (xhr.status === 403) {
                            toastr.error("You are forbidden from accessing this resource.");
                        } else {
                            console.error("Error loading modifier details:", status, error);
                            alert("Failed to load modifier details.");
                        }
                    }
                });
            });

            $('#categoryDropdown').change(function () {
                var categoryId = $(this).val();
                if (categoryId) {
                    $.ajax({
                        url: '@Url.Action("ModifiersList", "Modifier")',
                        type: 'GET',
                        data: { modifierId: categoryId },
                        success: function (result) {
                            $('#item-list').html($(result).find('#item-list').html());
                        },
                        error: function (xhr, status, error) {
                            if (xhr.status === 401) {
                                toastr.error("You are not authorized to perform this action.");
                            } else if (xhr.status === 403) {
                                toastr.error("You are forbidden from accessing this resource.");
                            } else {
                                console.error("Error loading modifier items:", status, error);
                                alert("Failed to load modifier items.");
                            }
                        }
                    });
                }
            });
        });

        // Clear modal content when hidden
        $('#editModifierModal').on('hidden.bs.modal', function () {
            $(this).find('.modal-content').html('');
        });

        $('#addModifierModal').on('hidden.bs.modal', function () {
            $(this).find('.modal-content').html('');
        });

        $('#addModifierForm').on('submit', function (e) {
            e.preventDefault();
            $.ajax({
                type: 'POST',
                url: $(this).attr('action'),
                data: $(this).serialize(),
                success: function (response) {
                    if (response.success) {
                        toastr.success(response.message);
                        $('#addModifierModal').modal('hide');
                        window.location.href = response.redirectUrl;
                    } else {
                        toastr.error(response.message);
                    }
                },
                error: function () {
                    toastr.error('An error occurred while adding the modifier.');
                }
            });
        });
    </script>
}
@using Entity.ViewModel
@model KOTViewModel

@{
    Layout = "_OrderAppLayout";
}

<div class="p-3">
    <h2>KOT</h2>
    <div class="bg-white p-2 rounded shadow">
        <ul class="nav " style="gap: 2px;">
            <li class="nav-item">
                <a class="nav-link top-pills active" href="#" data-category-id="all" style="border:none">All</a>
            </li>
            @foreach (var category in Model.Categories)
            {
                <li class="nav-item">
                    <a class="nav-link top-pills" href="#" data-category-id="@category.Id"
                        style="border:none">@category.Name</a>
                </li>
            }
        </ul>
    </div>
    <div class="bg-white d-flex mt-2 p-2 rounded shadow">
        <div class="d-flex flex-row justify-content-between align-items-center">
            <div class="m-2" id="selected-category-id">
                <h4 style="color:#0066a6;">All</h4>
            </div>
            <div>
                1
            </div>
        </div>
        @foreach (var order in Model.Orders)
        {
            <div class="kot-card m-2 ">
                <section class="card-header">
                    <div class="d-flex justify-content-between">
                        <b style="color: #026fad;">#@order.OrderNo</b>
                        <div><i class="fa-solid fa-stopwatch"></i> @order.OrderDuration </div>
                    </div>
                    <div class="d-flex text-dark">
                        @order.SectionName <i class="bi bi-dot"></i> @order.TableName
                    </div>
                </section>
                <section class="card-content ">
                    @foreach (var item in order.Items)
                    {
                        <div class="d-flex justify-content-between">
                            <div class="col-11">
                                <c style="font-size: 18px;">@item.Name</c>
                                <ul style="font-size: 15px;">
                                    @foreach (var modifier in item.Modifiers)
                                    {
                                        <li>@modifier</li>
                                    }
                                    @if (!string.IsNullOrEmpty(item.Instruction))
                                    {
                                        <em style="color:rgb(0, 174, 255);font-size:15px;">@item.Instruction</em>
                                    }
                                </ul>
                            </div>
                            <div class="col-1" style="color:black; font-size:15px;">@item.Quantity</div>
                        </div>
                    }
                </section>
                <section class="card-footer border-top ">
                    @if (!string.IsNullOrEmpty(order.OrderInstructions))
                    {
                        <em style="color:rgb(0, 174, 255)">Order Instructions</em>
                        <c style="color:black">: @order.OrderInstructions</c>
                    }
                </section>
            </div>
        }
    </div>
</div>
<script>
    document.addEventListener('DOMContentLoaded', () => {
        const tabs = document.querySelectorAll('.nav-link.top-pills');
        const selectedCategoryIdElement = document.getElementById('selected-category-id');

        tabs.forEach(tab => {
            tab.addEventListener('click', function (e) {
                e.preventDefault();
                tabs.forEach(t => t.classList.remove('active'));
                this.classList.add('active');
                
                const categoryName = this.textContent.trim();
                selectedCategoryIdElement.querySelector('h4').textContent = categoryName;
                
                const categoryId = this.getAttribute('data-category-id');
                const url = categoryId === 'all' ? '/KOT/GetOrders' : `/KOT/GetOrders?categoryId=${categoryId}`;
                
                fetch(url)
                    .then(response => response.json())
                    .then(data => {
                        const ordersContainer = document.querySelector('.bg-white.mt-2.p-2.rounded.shadow');
                        ordersContainer.innerHTML = '';
                        
                        data.forEach(order => {
                            const orderCard = `
                                <div class="kot-card m-2 ">
                                    <section class="card-header">
                                        <div class="d-flex justify-content-between">
                                            <b style="color: #026fad;">#${order.OrderNo}</b>
                                            <div><i class="fa-solid fa-stopwatch"></i> ${order.OrderDuration} </div>
                                        </div>
                                        <div class="d-flex text-dark">
                                            ${order.SectionName} <i class="bi bi-dot"></i> ${order.TableName}
                                        </div>
                                    </section>
                                    <section class="card-content ">
                                        ${order.Items.map(item => `
                                            <div class="d-flex justify-content-between">
                                                <div class="col-11">
                                                    <c style="font-size: 18px;">${item.Name}</c>
                                                    <ul style="font-size: 15px;">
                                                        ${item.Modifiers.map(modifier => `<li>${modifier}</li>`).join('')}
                                                        ${item.Instruction ? `<em style="color:rgb(0, 174, 255);font-size:15px;">${item.Instruction}</em>` : ''}
                                                    </ul>
                                                </div>
                                                <div class="col-1" style="color:black; font-size:15px;">${item.Quantity}</div>
                                            </div>
                                        `).join('')}
                                    </section>
                                    <section class="card-footer border-top ">
                                        ${order.OrderInstructions ? `<em style="color:rgb(0, 174, 255)">Order Instructions</em><c style="color:black">: ${order.OrderInstructions}</c>` : ''}
                                    </section>
                                </div>
                            `;
                            ordersContainer.insertAdjacentHTML('beforeend', orderCard);
                        });
                    });
            });
        });
    });
</script>
@{
    ViewData["Title"] = "TableSection";
}
@model Entity.ViewModel.TableSectionViewModel;

<div class="col-12">
    <h1 class="title">Sections / Tables</h1>
    <section>
        <div class="row mx-0">
            <aside class="col-md-3" style="background-color: #f5f5f5">
                <!-- Section header -->
                <div class="d-flex flex-wrap justify-content-between align-items-center p-2">
                    <h5 class="section-heading">Sections</h5>
                    <i class="cat-i fa-regular fa-square-plus" data-bs-toggle="modal" data-bs-target="#sectionModal"
                        onclick="openAddEditModal(0)"></i>
                </div>
                <div id="sectionList">
                    @Html.Partial("_SectionList", Model.Sections)
                </div>
            </aside>
            <div class="col-md-9 border-start border-primary bg-white">
                <div>
                    <!-- table header -->
                    <h5 class="p-2 mb-0 section-heading">Tables</h5>
                    <div class="d-flex justify-content-end align-items-center mb-3">
                        <div class="form-input-div d-flex justify-content-between me-3 position-relative">
                            <input type="text" placeholder="Search" class="form-control p-2 d-none d-sm-block "
                                name="search" minlength="5" required id="searchString" />
                            <span class="form-input-icon position-absolute search-icon"><i class="fa-solid fa-search"
                                    id="eye-icon" style="color: gray"></i>
                            </span>
                        </div>
                        <button class="btn btn-outline-secondary me-3" id="multiDeleteTableBtn">
                            <i class="bi bi-trash m-1"></i> 
                        </button>
                        <button class="fill-btn addTableBtn">
                            <i class="fa-solid fa-plus"></i> New Table
                        </button>
                    </div>
                    <!-- Items Table -->
                    <div id="tableList">
                        @Html.Partial("_TableList", Model)
                    </div>
                </div>
            </div>
        </div>
    </section>
</div>
@section Scripts {
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        $(document).ready(function () {
            function openAddEditModal(id) {
                $.get('@Url.Action("AddEditSection", "TableSection")' + '?id=' + id, function (data) {
                    $('#modalContent').html(data);
                    $('#sectionModal').modal('show');
                }).fail(function (jqXHR, textStatus, errorThrown) {
                    console.error("Request failed: " + textStatus + ", " + errorThrown);
                    toastr.error("Failed to load section form. Please try again.");
                });
            }

            window.openAddEditModal = openAddEditModal;

            $(document).on('submit', '#addEditSectionForm', function (event) {
                event.preventDefault();
                var form = $(this);
                var formData = form.serialize();
                var url = form.attr('action');
                $.ajax({
                    url: url,
                    type: form.attr('method'),
                    data: formData,
                    success: function (response) {
                        if (response.success) {
                            $('#sectionModal').remove();
                            $('.modal-backdrop').remove();
                            GetFilteredSections();
                            toastr.success(response.message);
                        } else {
                            toastr.error(response.message);
                            $('#modalContent').html(response.html);
                        }
                    },
                    error: function (xhr, status, error) {
                        console.error("An error occurred: " + error);
                        toastr.error("An error occurred. Please try again.");
                    }
                });
            });

            function GetFilteredSections() {
                $.ajax({
                    url: "/TableSection/GetAllSectionsForFilter",
                    type: "GET",
                    success: function (data) {
                        $("#sectionList").html(data);
                    },
                    error: function (xhr, status, error) {
                        console.error("An error occurred while fetching the sections: " + error);
                        toastr.error("An error occurred while fetching the sections. Please try again.");
                    }
                });
            }

            var sectionId = '@Model.Sections.FirstOrDefault()?.Id';
            $(".addTableBtn").click(function () {
                $.get('@Url.Action("AddNewTable", "TableSection")', function (data) {
                    console.log("Add data")
                    $("#AddTablePartial").html(data);
                    $("#addTableModal").modal('show');
                });
            });
            $(document).on('submit', "#addNewTableForm", function (event) {
                var tableId = $(this).data("id");
                event.preventDefault();
                var form = $("#addNewTableForm");
                $.ajax({
                    url: tableId ? '/TableSection/EditTable' : '/TableSection/AddNewTable',
                    type: 'POST',
                    data: form.serialize(),
                    success: function (response) {
                        if (response.success) {
                            console.log("Saved");
                            GetFilteredItems();
                            toastr.success(response.message);
                        } else {
                            toastr.error(response.message);
                        }
                        $("#addTableModal").modal('hide');
                    }
                });
            });
            $(document).on("click", ".editTableBtn", function () {
                var tableId = $(this).data("id");
                $.get('@Url.Action("EditTable", "TableSection")', { id: tableId }, function (data) {
                    $("#AddTablePartial").html(data);
                    $("#addNewTableForm").data("id", tableId);
                    $("#addTableModal").modal("show");
                });
            });
            var debounce;
            var ajaxRequest;
            $(document).on('click', '.section', function () {
                sectionId = $(this).data("id");
                var sectionId = $(this).data("id");
                $.ajax({
                    url: '/TableSection/GetTablesBySectionId',
                    type: 'GET',
                    data: { sectionId: sectionId, pageSize: @Model.PageSize, pageIndex: @Model.PageIndex, searchString: "" },
                    success: function (response) {
                        $("#tableList").html(response);
                    }
                });
            });
            var pageIndex = @Model.PageIndex;
            function GetFilteredItems() {
                var SearchString = $("#searchString").val();
                var pageSize = $("#pageSizeTable").val();
                if (ajaxRequest && ajaxRequest.readyState !== 4) {
                    ajaxRequest.abort();
                }
                console.log("GetFilteredItems Item");
                ajaxRequest = $.ajax({
                    url: "/TableSection/GetTablesBySectionId",
                    type: "GET",
                    data: {
                        sectionId: sectionId,
                        pageIndex: pageIndex,
                        pageSize: pageSize,
                        searchString: SearchString
                    },
                    success: function (data) {
                        $("#tableList").html(data);
                    }
                });
            }
            $('#searchString').keyup(function () {
                clearTimeout(debounce);
                pageIndex = 1
                pageSize = @Model.PageSize;
                debounce = setTimeout(() => {
                    GetFilteredItems();
                }, 600);
            });
        });
    </script>
}